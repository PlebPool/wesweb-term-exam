package com.utopia.backend.posts.model.post

import org.springframework.data.annotation.Id
import java.time.LocalDate
import java.time.LocalTime
import javax.validation.constraints.Size

/*
    A domain class which models the post table in our mysql database.
*/
data class Post(
        // @Id means it's generated by the r2dbc driver when it's initialized when it's added to whichever database
        // it communicated with.
    @Id var post_id: Long,
    var alias: String,
        // @Size constraints below mean that title, and content cannot be empty.
        // If Empty, the @Valid annotation in PostController will return a 404 response to the user.
    @Size(min = 1, message = "Title cannot be empty") val title: String,
    @Size(min = 1, message = "Content cannot be empty") val content: String,
    val likes: Long = 0,
        //@JsonFormat(pattern = "yyyy-MM-dd")
    val dateOfPost: LocalDate = LocalDate.now(),
        //@JsonFormat(pattern = "HH:mm:s")
    val timeOfPost: LocalTime = LocalTime.now()
) {
    init {
        if(alias == "") { // The alias is empty. If alias is not specified. Then alias becomes "Anonymous".
            alias = "Anonymous"
        }
    }
}
